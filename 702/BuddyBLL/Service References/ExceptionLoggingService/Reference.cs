//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BuddyBLL.ExceptionLoggingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationType", Namespace="http://schemas.datacontract.org/2004/07/CTS.OneC.LoggingService")]
    public enum ApplicationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebApplication = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebService = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WindowsService = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Batch = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExceptionLog", Namespace="http://schemas.datacontract.org/2004/07/CTS.OneC.LoggingService")]
    [System.SerializableAttribute()]
    public partial class ExceptionLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BuddyBLL.ExceptionLoggingService.ApplicationType ApplicationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlobalAppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BuddyBLL.ExceptionLoggingService.ApplicationType ApplicationType {
            get {
                return this.ApplicationTypeField;
            }
            set {
                if ((this.ApplicationTypeField.Equals(value) != true)) {
                    this.ApplicationTypeField = value;
                    this.RaisePropertyChanged("ApplicationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIDField, value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlobalAppId {
            get {
                return this.GlobalAppIdField;
            }
            set {
                if ((this.GlobalAppIdField.Equals(value) != true)) {
                    this.GlobalAppIdField = value;
                    this.RaisePropertyChanged("GlobalAppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineName {
            get {
                return this.MachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineNameField, value) != true)) {
                    this.MachineNameField = value;
                    this.RaisePropertyChanged("MachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExceptionLoggingService.ILogging")]
    public interface ILogging {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogging/LogError", ReplyAction="http://tempuri.org/ILogging/LogErrorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/ILogging/LogErrorExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void LogError(string message, string stackTrace, string methodName, string ApplicationName, BuddyBLL.ExceptionLoggingService.ApplicationType applicationType, string className, string employeeID, int globalAppId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogging/LogException", ReplyAction="http://tempuri.org/ILogging/LogExceptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/ILogging/LogExceptionExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void LogException(BuddyBLL.ExceptionLoggingService.ExceptionLog objExceptionLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogging/LogInformation", ReplyAction="http://tempuri.org/ILogging/LogInformationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/ILogging/LogInformationExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void LogInformation(BuddyBLL.ExceptionLoggingService.ExceptionLog objExceptionLog);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoggingChannel : BuddyBLL.ExceptionLoggingService.ILogging, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoggingClient : System.ServiceModel.ClientBase<BuddyBLL.ExceptionLoggingService.ILogging>, BuddyBLL.ExceptionLoggingService.ILogging {
        
        public LoggingClient() {
        }
        
        public LoggingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoggingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void LogError(string message, string stackTrace, string methodName, string ApplicationName, BuddyBLL.ExceptionLoggingService.ApplicationType applicationType, string className, string employeeID, int globalAppId) {
            base.Channel.LogError(message, stackTrace, methodName, ApplicationName, applicationType, className, employeeID, globalAppId);
        }
        
        public void LogException(BuddyBLL.ExceptionLoggingService.ExceptionLog objExceptionLog) {
            base.Channel.LogException(objExceptionLog);
        }
        
        public void LogInformation(BuddyBLL.ExceptionLoggingService.ExceptionLog objExceptionLog) {
            base.Channel.LogInformation(objExceptionLog);
        }
    }
}
