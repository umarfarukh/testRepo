var jQXB = { version: "1.1.20110926", initialized: false, alertOnError: false, compatibilitymode: false, m: { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, datasourcesCollectionOrigValues: new Array(), datasourcesCollection: new Array(), charset: "charset=utf-8", onBeforeUpdateCallBacks: new Array(), onAfterUpdateCallBacks: new Array(), onBeforeDataSourceBindCallBacks: new Array(), onAfterDataSourceBindCallBacks: new Array(), onBeforeTemplateBindCallBacks: new Array(), onAfterTemplateBindCallBacks: new Array(), onTemplateItemBindedCallbacks: new Array(), messageSubscribers: new Array(), internalOnBinding: new Array(), JQXB_DEFAULT_CHANGE_EVENT: "change", JQXB_DATASOURCE_ATTR: "jqxb-datasource", JQXB_DATASOURCE_MEMBER_ATTR: "jqxb-datamember", JQXB_TEMPLATE_ATTR: "jqxb-template", JQXB_OCCURENCY_ATTR: "jqxb-occurency", JQXB_TEMPLATECONTAINER_ATTR: "jqxb-templatecontainer", JQXB_TEMPLATEITEMPREFIX_ATTR: "jqxb-templateitemidprfx", JQXB_TEMPLATEOWNER_ATTR: "jqxb-itemtemplate", JQXB_TEMPLATEITEMDATAMEMBER_ATTR: "jqxb-itemdatamember", JQXB_TEMPLATEITEMDATASOURCE_ATTR: "jqxb-itemdatasource", JQXB_TEMPLATEITEMIDX_ATTR: "jqxb-itemdatasourceidx", JQXB_TEMPLATEITEM_DYNAMIC_ID_ATTR: "jqxb-templateitemdynamicid", JQXB_CHANGEONEVENT_ATTR: "jqxb-changeonevent", JQXB_BINDEDATTRIBUTE_ATTR: "jqxb-bindedattribute", JQXB_LISTSOURCE: "jqxb-listsource", JQXB_LISTVALUE: "jqxb-listvalue", JQXB_LISTTEXT: "jqxb-listtext", JQXB_VALUETRANSFORMATION: "jqxb-transformfunc", JQXB_CALCULATIONFUNC: "jqxb-calculatefunc" }; jQXB.toJSON = function (h, j) { var b, c, d, e, f = /["\\\x00-\x1f\x7f-\x9f]/g, g; switch (typeof h) { case "string": return f.test(h) ? '"' + h.replace(f, function (k) { var l = jQXB.m[k]; if (l) { return l } l = k.charCodeAt(); return "\\u00" + Math.floor(l / 16).toString(16) + (l % 16).toString(16) }) + '"' : '"' + h + '"'; case "number": return isFinite(h) ? String(h) : "null"; case "boolean": case "null": return String(h); case "object": if (!h) { return "null" } if (typeof h.toJSON === "function") { return jQXB.toJSON(h.toJSON()) } b = []; if (typeof h.length === "number" && !(h.propertyIsEnumerable("length"))) { e = h.length; for (c = 0; c < e; c += 1) { b.push(jQXB.toJSON(h[c], j) || "null") } return "[" + b.join(",") + "]" } if (j) { e = j.length; for (c = 0; c < e; c += 1) { d = j[c]; if (typeof d === "string") { g = jQXB.toJSON(h[d], j); if (g) { b.push(jQXB.toJSON(d) + ":" + g) } } } } else { for (d in h) { if (typeof d === "string") { g = jQXB.toJSON(h[d], j); if (g) { b.push(jQXB.toJSON(d) + ":" + g) } } } } return "{" + b.join(",") + "}" } }; jQXB.initialize = function (b, a) { var c = new Array(); if (c) { jQuery("[" + jQXB.JQXB_DATASOURCE_ATTR + "]:not([" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "])").each(function () { if (jQuery(this).attr(jQXB.JQXB_DATASOURCE_MEMBER_ATTR) == undefined) { c.push(jQuery(this).attr(jQXB.JQXB_DATASOURCE_ATTR) + " missing " + jQXB.JQXB_DATASOURCE_MEMBER_ATTR + "attribute") } }) } if (jQXB.alertOnError != undefined) { jQXB.alertOnError = a } if (jQXB.initialized) { return jQXB } jQXB.initialized = true; return jQXB.attachChangeEvents() }; jQXB.refreshControls = function (b, c, a) { var d; if (c == undefined) { if (a == undefined) { d = "[" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "][" + jQXB.JQXB_DATASOURCE_MEMBER_ATTR + "]" } else { d = "[" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "][" + jQXB.JQXB_DATASOURCE_MEMBER_ATTR + "=" + a + "]" } } else { if (a == undefined) { d = "[" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "][" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "] [" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "=" + c + "] [" + jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR + "]" } else { d = "[" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "][" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "] [" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "=" + c + "] [" + jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR + "=" + a + "]" } } jQuery(d).each(function () { jQXB.getmemberValue(jQXB.getDataSource(b), c, jQuery(this).attr(jQXB.JQXB_DATASOURCE_MEMBER_ATTR) || jQuery(this).attr(jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR), jQuery(this)) }); return jQXB }; jQXB.attachChangeEvents = function () { jQuery("body").delegate("[" + jQXB.JQXB_DATASOURCE_MEMBER_ATTR + "][" + jQXB.JQXB_DATASOURCE_ATTR + "]", jQXB.JQXB_DEFAULT_CHANGE_EVENT, function () { var a = jQuery(this); var b = jQXB.getValueFromAttrib(a); jQXB.setmemberVarvalue(a.attr(jQXB.JQXB_DATASOURCE_ATTR), null, a.attr(jQXB.JQXB_DATASOURCE_MEMBER_ATTR), b, a) }); jQuery("body").delegate("[" + jQXB.JQXB_DATASOURCE_ATTR + "][" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "] [" + jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR + "]", jQXB.JQXB_DEFAULT_CHANGE_EVENT, function () { var a = jQuery(this); var c = a.parents("[" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "]").first().attr(jQXB.JQXB_TEMPLATEOWNER_ATTR); var b = a.parents("[" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "]").first().attr(jQXB.JQXB_TEMPLATEITEMIDX_ATTR); var d = jQXB.getValueFromAttrib(a); jQXB.setmemberVarvalue(a.parents("[" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "=" + c + "]").attr(jQXB.JQXB_DATASOURCE_ATTR), b, a.attr(jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR), d, a) }); return jQXB }; jQXB.attachChangeEvent = function (a, e, c, d) { var b = d.attr(jQXB.JQXB_CHANGEONEVENT_ATTR); if (b == undefined) { b = jQXB.JQXB_DEFAULT_CHANGE_EVENT } d.unbind(b, function () { jQXB.setmemberVarvalue(a, e, c, jQXB.getValueFromAttrib(jQuery(this)), jQuery(this)) }); d.bind(b, function () { jQXB.setmemberVarvalue(a, e, c, jQXB.getValueFromAttrib(jQuery(this)), jQuery(this)) }); return jQXB }; jQXB.addOnTemplateItemBoundhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnTemplateItemBoundhnd Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onTemplateItemBindedCallbacks, a); return jQXB }; jQXB.delOnTemplateItemBoundhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnTemplateItemBoundhnd Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onTemplateItemBindedCallbacks, a); return jQXB }; jQXB.addOnBeforeUpdatehnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnBeforeUpdatehnd   Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onBeforeUpdateCallBacks, a); return jQXB }; jQXB.delOnBeforeUpdatehnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnBeforeUpdatehnd Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onBeforeUpdateCallBacks, a); return jQXB }; jQXB.addOnAfterUpdatehnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnAfterUpdatehnd   Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onAfterUpdateCallBacks, a); return jQXB }; jQXB.delOnAfterUpdatehnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnAfterUpdatehnd Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onAfterUpdateCallBacks, a); return jQXB }; jQXB.addOnBeforeDataSourceBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnBeforeDataSourceBindhnd Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onBeforeDataSourceBindCallBacks, a); return jQXB }; jQXB.delOnBeforeDataSourceBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnBeforeDataSourceBindhnd  Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onBeforeDataSourceBindCallBacks, a); return jQXB }; jQXB.addOnAfterDataSourceBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnAfterDataSourceBindhnd Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onAfterDataSourceBindCallBacks, a); return jQXB }; jQXB.delOnAfterDataSourceBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnAfterDataSourceBindhnd  Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onAfterDataSourceBindCallBacks, a); return jQXB }; jQXB.addOnBeforeTemplateBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnAfterTemplateBindhnd  Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onBeforeTemplateBindCallBacks, a); return jQXB }; jQXB.delOnBeforeTemplateBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnBeforeTemplateBindhnd  Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onBeforeTemplateBindCallBacks, a); return jQXB }; jQXB.addOnAfterTemplateBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnAfterTemplateBindhnd  Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onAfterTemplateBindCallBacks, a); return jQXB }; jQXB.delOnAfterTemplateBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnAfterTemplateBindhnd  Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onAfterTemplateBindCallBacks, a); return jQXB }; jQXB.addOnEvthnd = function (b, a) { for (idx = 0; idx < b.length; idx++) { if (b[idx].toString() == a.toString()) { return } } b.push(a) }; jQXB.delOnEventhdn = function (b, a) { if (typeof (a) != "function") { alert("jQXB.delOnEventhdn Error: handler param must be a function"); return } for (idx = 0; idx < b.length; idx++) { if (b[idx].toString() == a.toString()) { b.splice(idx, 1); break } } }; jQXB.setDataSource = function (c, d, a) { var b = jQXB.datasourcesCollection[c]; if (b == undefined) { b = { datasource: d, autorefresh: a} } else { b.datasource = d } if (a != undefined) { b.autorefresh = a } jQXB.datasourcesCollection[c] = b; jQXB.datasourcesCollectionOrigValues[c] = d; return jQXB }; jQXB.getDataSource = function getDataSource(a) { try { return jQXB.datasourcesCollection[a].datasource } catch (b) { b.arguments = arguments; alert(jQXB.diags.dumpobj(b, "[ERROR]", "->")) } }; jQXB.getDataSourceContainer = function (a) { return jQXB.datasourcesCollection[a] }; jQXB.getDataSourceOrigValue = function (a) { return jQXB.datasourcesCollectionOrigValues[a] }; jQXB.addRowToDataSource = function (b, c, a) { if (!jQXB.utils.isEnumerable(jQXB.getDataSource(b))) { alert(b + "  must be enumerable in order to add object "); return } if (a == undefined) { jQXB.getDataSource(b).push(c) } else { jQXB.getDataSource(b).splice(a, 0, c) } jQXB.bindTemplate(b); jQXB.bindList(b); return jQXB }; jQXB.addObjectToDataSource = function (a, b) { return jQXB.addRowToDataSource(a, b) }; jQXB.deleteRowFromDataSource = function (a, b) { if (!jQXB.utils.isEnumerable(jQXB.getDataSource(a))) { alert(a + "  must be enumerable in order to remove object "); return } jQXB.getDataSource(a).splice(b, 1); jQuery("[" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "][" + jQXB.JQXB_DATASOURCE_ATTR + "=" + a + "] > [" + jQXB.JQXB_TEMPLATE_ATTR + "][" + jQXB.JQXB_TEMPLATEITEMPREFIX_ATTR + "]").each(function () { jQXB.deleteTemplateRow(jQuery(this).attr(jQXB.JQXB_TEMPLATE_ATTR), b) }); return jQXB }; jQXB.deleteObjectFromDataSource = function (a, b) { return jQXB.deleteRowFromDataSource(a, b) }; jQXB.saveJSON = function (d, a, c, b) { return jQXB.postJSON(d, "post", a, c, b) }; jQXB.deleteJSON = function (d, a, c, b) { return jQXB.postJSON(d, "delete", a, c, b) }; jQXB.postJSON = function (e, c, a, d, b) { return jQXB.ajaxCall(e, c, a, d, b) }; jQXB.ajaxCall = function (e, c, a, d, b) { jQuery.ajax({ type: c, traditional: true, url: e, async: false, data: jQXB.toJSON(a), dataType: "json", contentType: "application/json; " + jQXB.charset, success: function (f) { if (d != undefined) { d(f) } }, error: function (f) { if (b != undefined) { if (jQXB.alertOnError) { alert("jQXB.ajaxCall ERROR: url:" + e + " method: " + c) } b(f) } } }); return jQXB }; jQXB.getJSON = function (d, a, c, b) { jQuery.ajax({ type: "get", traditional: true, url: d, async: false, data: a, dataType: "json", contentType: "application/json; " + jQXB.charset, success: function (e) { if (c != undefined) { c(e) } }, error: function (e) { if (b != undefined) { if (jQXB.alertOnError) { alert("jQXB.getJSON ERROR:") } b(e) } } }); return jQXB }; jQXB.deleteTemplateRow = function (f, d) { var a, e, b, c; a = jQuery("[" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "=" + f + "]").first().attr(jQXB.JQXB_DATASOURCE_ATTR); jQuery("[" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "=" + f + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "=" + d + "]").remove(); e = jQuery("[" + jQXB.JQXB_TEMPLATE_ATTR + "=" + f + "][" + jQXB.JQXB_TEMPLATEITEMPREFIX_ATTR + "]").first().attr(jQXB.JQXB_TEMPLATEITEMPREFIX_ATTR); b = 0; jQuery("[" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "=" + f + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "]").each(function () { jQuery(this).attr("id", e + "_" + b).attr(jQXB.JQXB_TEMPLATEITEMIDX_ATTR, b); jQXB.bindElementsTemplates(a, jQuery(this).attr(jQXB.JQXB_TEMPLATEOWNER_ATTR), b, jQuery(this)); b++ }); return jQXB }; jQXB.clearTemplateInstances = function (a) { jQuery("[" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "=" + a + "]").unbind().remove(); return jQXB }; jQXB.doBind = function (b, a) { var c = new Array(); if (b != undefined) { c.push(b) } else { for (var g in jQXB.datasourcesCollection) { c.push(g) } } try { for (var f = 0; f < c.length; f++) { jQXB.bindList(c[f], a); jQXB.bindSingleDataMember(c[f], a); jQXB.bindTemplate(c[f], a) } } catch (d) { d.arguments = arguments; alert(jQXB.diags.dumpobj(d, "ERROR", "->")) } return jQXB }; jQXB.bindList = function (b, a) { jQuery("[" + jQXB.JQXB_LISTSOURCE + "=" + b + "][" + jQXB.JQXB_LISTVALUE + "][" + jQXB.JQXB_LISTTEXT + "]").each(function () { jQXB.utils.filllist(jQuery(this), jQXB.getDataSource(b), jQuery(this).attr(jQXB.JQXB_LISTVALUE), jQuery(this).attr(jQXB.JQXB_LISTTEXT)) }) }; jQXB.bindSingleDataMember = function (b, a) { for (var c = 0; c < jQXB.onBeforeDataSourceBindCallBacks.length; c++) { jQXB.onBeforeDataSourceBindCallBacks[c](b, jQXB.getDataSource(b)) } jQuery("[" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "][" + jQXB.JQXB_DATASOURCE_MEMBER_ATTR + "]", a).each(function () { jQXB.bindElement(b, null, jQuery(this).attr(jQXB.JQXB_DATASOURCE_MEMBER_ATTR), jQuery(this)) }); for (var c = 0; c < jQXB.onAfterDataSourceBindCallBacks.length; c++) { jQXB.onAfterDataSourceBindCallBacks[c](b, jQXB.getDataSource(b)) } return jQXB }; jQXB.bindElement = function (b, e, a, d) { var c = jQXB.getDataSource(b); jQXB.getmemberValue(c, e, a, d); return jQXB }; jQXB.bindTemplate = function (b, a) { jQuery("[" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "][" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "]").each(function () { var f, e, c; f = jQXB.getDataSource(b); e = jQuery(this); c = e.attr(jQXB.JQXB_TEMPLATECONTAINER_ATTR); for (var d = 0; d < jQXB.onBeforeTemplateBindCallBacks.length; d++) { jQXB.onBeforeTemplateBindCallBacks[d](b, jQXB.getDataSource(b), c) } for (var d = 0; d < f.length; d++) { jQrySingleItem = jQuery(this).find("[" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "=" + d + "]"); if (jQrySingleItem.length != 0) { jQuery(this).find("[" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "=" + d + "]").each(function () { jQXB.bindElementsTemplates(b, c, d, jQuery(this)) }) } else { jQrySingleItem = e.find("[" + jQXB.JQXB_TEMPLATE_ATTR + "=" + c + "]").clone(); id = jQrySingleItem.attr(jQXB.JQXB_TEMPLATEITEMPREFIX_ATTR); id += "_" + d; jQrySingleItem.attr("id", id).removeAttr(jQXB.JQXB_TEMPLATEITEMPREFIX_ATTR).removeAttr(jQXB.JQXB_TEMPLATE_ATTR).attr(jQXB.JQXB_TEMPLATEITEMIDX_ATTR, d).attr(jQXB.JQXB_TEMPLATEOWNER_ATTR, c).show().appendTo(e); jQXB.bindElementsTemplates(b, c, d, jQrySingleItem) } } }); return jQXB }; jQXB.bindElementsTemplates = function (a, e, d, c) { c.find("[" + jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR + "]").each(function () { var g = jQuery(this).attr(jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR); try { var h = jQuery(this).attr(jQXB.JQXB_TEMPLATEITEM_DYNAMIC_ID_ATTR); if (jQuery(this).attr("id") == undefined && h != undefined) { jQuery(this).removeAttr("id"); jQuery(this).removeAttr(jQXB.JQXB_TEMPLATEITEM_DYNAMIC_ID_ATTR).attr("id", h + d) } } catch (f) { } jQXB.bindElement(a, d, g, jQuery(this)) }); for (var b = 0; b < jQXB.onTemplateItemBindedCallbacks.length; b++) { jQXB.onTemplateItemBindedCallbacks[b](a, e, d, jQXB.getDataSource(a)[d], c) } return jQXB }; jQXB.setmemberVarvalue = function (e, l, g, m, h) { var k, j, d; k = g.split("."); d = jQXB.getDataSource(e); if (d === undefined && jQXB.alertOnError) { alert("jQXB.setmemberVarvalue ERROR: no datasource '" + e + "' found. called from " + jQXB.setmemberVarvalue.caller.toString()) } j = jQXB.getMemberByReflection(d, l, k); if (typeof (j) == "function") { return } var a = jQXB.onBeforeUpdateCallBacks.length; for (var f = 0; f < a; f++) { var c = jQXB.onBeforeUpdateCallBacks[f](e, l, j, g, m); if (c == true) { jQXB.getmemberValue(d, l, g, h); return } } jQXB.setMemberValByReflection(d, l, k, m); if (jQXB.getDataSourceContainer(e).autorefresh) { jQXB.refreshControls(e, l, g) } var b = jQXB.onAfterUpdateCallBacks.length; for (var f = 0; f < b; f++) { var c = jQXB.onAfterUpdateCallBacks[f](e, l, jQXB.getMemberByReflection(d, l, k), g, m) } return jQXB }; jQXB.setMemberValByReflection = function (e, c, d, f) { var b; b = (c != null) ? e[c] : e; for (var a = 0; a < d.length - 1; a++) { b = b[d[a]] } b[d[d.length - 1]] = f }; jQXB.getMemberByReflection = function (e, c, d) { var b; b = (c != null) ? e[c] : e; for (var a = 0; a < d.length - 1; a++) { b = b[d[a]] } return b[d[d.length - 1]] }; jQXB.getmemberValue = function (b, f, c, d) { var e; e = jQXB.getMemberByReflection(b, f, c.split(".")); var a = d.attr(jQXB.JQXB_BINDEDATTRIBUTE_ATTR); if (typeof (e) == "function") { e = e(b[f] || b) } var g = d.attr(jQXB.JQXB_VALUETRANSFORMATION); if (g != undefined) { e = jQXB.utils.callFunctionByName(g, window, e) } if (a == undefined) { d.val(e) } else { switch (a) { case "html": d.html(e); break; case "text": d.text(e); break; default: if (jQXB.compatibilitymode) { d.attr(a, e) } else { d.prop(a, e) } break } } e = null; return jQXB }; jQXB.getValueFromAttrib = function (b) { var a = b.attr(jQXB.JQXB_BINDEDATTRIBUTE_ATTR); if (a != undefined) { if (jQXB.compatibilitymode) { elementValue = b.attr(a) } else { elementValue = b.prop(a) } } else { elementValue = b.val() } var c = b.attr(jQXB.JQXB_VALUETRANSFORMATION); if (c != undefined) { elementValue = jQXB.utils.callFunctionByName(c, window, elementValue) } return elementValue }; jQXB.utils = {}; jQXB.utils.filllist = function (d, b, f, e) { if (!jQXB.utils.isEnumerable(b)) { alert("jQXB.utils.filllist: dataItems is not an enumerable type"); return } var a = d.val(); d.find("option").remove(); for (var c = 0; c < b.length; c++) { d.append(jQuery("<option></option>").attr("value", jQXB.getMemberByReflection(b, c, f.split("."))).text(jQXB.getMemberByReflection(b, c, e.split(".")))) } d.val(a) }; jQXB.utils.isEnumerable = function (a) { return a.length != undefined }; jQXB.utils.normalizeMemberPath = function (a) { return a.replace("[").replace("]") }; jQXB.utils.makeObservable = function (c) { var b = {}; for (var a in c) { b.__defineGetter__(a.toString(), function () { return a }); b._defineSetter__(a.toString(), function (d) { a = d }) } }; jQXB.utils.callFunctionByName = function (c, b) { var a = Array.prototype.slice.call(arguments, 2); var f = c.split("."); var d = f.pop(); for (var e = 0; e < f.length; e++) { b = b[f[e]] } return b[d].apply(b, a) }; jQXB.diags = { MAX_DUMP_DEPTH: 10 }; jQXB.diags.dumpobj = function (h, g, c, f) { depth = f || 0; if (depth > jQXB.diags.MAX_DUMP_DEPTH) { return c + g + ": <Maximum Depth Reached>\n" } if (typeof h == "object") { var a = null; var j = c + g + "\n"; c += "\t"; for (var d in h) { try { a = h[d] } catch (b) { a = "<Unable to Evaluate>" } if (typeof a == "object") { j += jQXB.diags.dumpobj(a, d, c, depth + 1) } else { j += c + d + ": " + a + "\n" } } return j } else { return h } }; jQXB.diags.output = function (a) { alert(a) }; jQXBM = { messageSubscribers: new Array(), checkNoSubscriber: false }; jQXBM.subscribeMessage = function (b, a) { b = b || "any"; if (typeof (a) != "function") { alert("jQXBM.subscribeMessage: messagehandler for topic [" + b + "] is not a function"); return } jQXBM.messageSubscribers[b] = jQXBM.messageSubscribers[b] || new Array(); for (idx = 0; idx < jQXBM.messageSubscribers[b].length; idx++) { if (jQXBM.messageSubscribers[b][idx].toString() == a.toString()) { return } } jQXBM.messageSubscribers[b].push(a) }; jQXBM.unsubscribeMessage = function (b, a) { b = b || "any"; if (typeof (a) != "function") { alert("jQXBM.unsubscribeMessage: messagehandler for topic [" + b + "] is not a function"); return } for (idx = 0; idx < jQXBM.messageSubscribers[b].length; idx++) { if (jQXBM.messageSubscribers[b][idx].toString() == a.toString()) { jQXBM.messageSubscribers[b].splice(idx, 1); return } } }; jQXBM.fireMessage = function (d, a, b) { var c; c = jQXBM.messageSubscribers.any; if (c != undefined) { for (i = 0; i < c.length; i++) { c[i](a, b) } } if (d == undefined) { return } c = jQXBM.messageSubscribers[d]; if (c == undefined) { return } for (i = 0; i < c.length; i++) { c[i](a, b) } };