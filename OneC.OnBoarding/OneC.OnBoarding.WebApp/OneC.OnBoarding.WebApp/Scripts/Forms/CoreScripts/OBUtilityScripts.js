/* 
************************************************
OnBoarding page utility methods helper
************************************************
Author: 260947
Date: 2012-Dec-03
Purpose: Base utility methods for frequent use
************************************************
Note:  The below functions are having URL related params.  Make sure that you are including this script at proper level or you have to provide service method URLs of your own.
*/
/* JQXB.js */
var jQXB = { version: "1.1.20110926", initialized: false, alertOnError: false, compatibilitymode: false, m: { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, datasourcesCollectionOrigValues: new Array(), datasourcesCollection: new Array(), charset: "charset=utf-8", onBeforeUpdateCallBacks: new Array(), onAfterUpdateCallBacks: new Array(), onBeforeDataSourceBindCallBacks: new Array(), onAfterDataSourceBindCallBacks: new Array(), onBeforeTemplateBindCallBacks: new Array(), onAfterTemplateBindCallBacks: new Array(), onTemplateItemBindedCallbacks: new Array(), messageSubscribers: new Array(), internalOnBinding: new Array(), JQXB_DEFAULT_CHANGE_EVENT: "change", JQXB_DATASOURCE_ATTR: "jqxb-datasource", JQXB_DATASOURCE_MEMBER_ATTR: "jqxb-datamember", JQXB_TEMPLATE_ATTR: "jqxb-template", JQXB_OCCURENCY_ATTR: "jqxb-occurency", JQXB_TEMPLATECONTAINER_ATTR: "jqxb-templatecontainer", JQXB_TEMPLATEITEMPREFIX_ATTR: "jqxb-templateitemidprfx", JQXB_TEMPLATEOWNER_ATTR: "jqxb-itemtemplate", JQXB_TEMPLATEITEMDATAMEMBER_ATTR: "jqxb-itemdatamember", JQXB_TEMPLATEITEMDATASOURCE_ATTR: "jqxb-itemdatasource", JQXB_TEMPLATEITEMIDX_ATTR: "jqxb-itemdatasourceidx", JQXB_TEMPLATEITEM_DYNAMIC_ID_ATTR: "jqxb-templateitemdynamicid", JQXB_CHANGEONEVENT_ATTR: "jqxb-changeonevent", JQXB_BINDEDATTRIBUTE_ATTR: "jqxb-bindedattribute", JQXB_LISTSOURCE: "jqxb-listsource", JQXB_LISTVALUE: "jqxb-listvalue", JQXB_LISTTEXT: "jqxb-listtext", JQXB_VALUETRANSFORMATION: "jqxb-transformfunc", JQXB_CALCULATIONFUNC: "jqxb-calculatefunc" }; jQXB.toJSON = function (h, j) { var b, c, d, e, f = /["\\\x00-\x1f\x7f-\x9f]/g, g; switch (typeof h) { case "string": return f.test(h) ? '"' + h.replace(f, function (k) { var l = jQXB.m[k]; if (l) { return l } l = k.charCodeAt(); return "\\u00" + Math.floor(l / 16).toString(16) + (l % 16).toString(16) }) + '"' : '"' + h + '"'; case "number": return isFinite(h) ? String(h) : "null"; case "boolean": case "null": return String(h); case "object": if (!h) { return "null" } if (typeof h.toJSON === "function") { return jQXB.toJSON(h.toJSON()) } b = []; if (typeof h.length === "number" && !(h.propertyIsEnumerable("length"))) { e = h.length; for (c = 0; c < e; c += 1) { b.push(jQXB.toJSON(h[c], j) || "null") } return "[" + b.join(",") + "]" } if (j) { e = j.length; for (c = 0; c < e; c += 1) { d = j[c]; if (typeof d === "string") { g = jQXB.toJSON(h[d], j); if (g) { b.push(jQXB.toJSON(d) + ":" + g) } } } } else { for (d in h) { if (typeof d === "string") { g = jQXB.toJSON(h[d], j); if (g) { b.push(jQXB.toJSON(d) + ":" + g) } } } } return "{" + b.join(",") + "}" } }; jQXB.initialize = function (b, a) { var c = new Array(); if (c) { jQuery("[" + jQXB.JQXB_DATASOURCE_ATTR + "]:not([" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "])").each(function () { if (jQuery(this).attr(jQXB.JQXB_DATASOURCE_MEMBER_ATTR) == undefined) { c.push(jQuery(this).attr(jQXB.JQXB_DATASOURCE_ATTR) + " missing " + jQXB.JQXB_DATASOURCE_MEMBER_ATTR + "attribute") } }) } if (jQXB.alertOnError != undefined) { jQXB.alertOnError = a } if (jQXB.initialized) { return jQXB } jQXB.initialized = true; return jQXB.attachChangeEvents() }; jQXB.refreshControls = function (b, c, a) { var d; if (c == undefined) { if (a == undefined) { d = "[" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "][" + jQXB.JQXB_DATASOURCE_MEMBER_ATTR + "]" } else { d = "[" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "][" + jQXB.JQXB_DATASOURCE_MEMBER_ATTR + "=" + a + "]" } } else { if (a == undefined) { d = "[" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "][" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "] [" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "=" + c + "] [" + jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR + "]" } else { d = "[" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "][" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "] [" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "=" + c + "] [" + jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR + "=" + a + "]" } } jQuery(d).each(function () { jQXB.getmemberValue(jQXB.getDataSource(b), c, jQuery(this).attr(jQXB.JQXB_DATASOURCE_MEMBER_ATTR) || jQuery(this).attr(jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR), jQuery(this)) }); return jQXB }; jQXB.attachChangeEvents = function () { jQuery("body").delegate("[" + jQXB.JQXB_DATASOURCE_MEMBER_ATTR + "][" + jQXB.JQXB_DATASOURCE_ATTR + "]", jQXB.JQXB_DEFAULT_CHANGE_EVENT, function () { var a = jQuery(this); var b = jQXB.getValueFromAttrib(a); jQXB.setmemberVarvalue(a.attr(jQXB.JQXB_DATASOURCE_ATTR), null, a.attr(jQXB.JQXB_DATASOURCE_MEMBER_ATTR), b, a) }); jQuery("body").delegate("[" + jQXB.JQXB_DATASOURCE_ATTR + "][" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "] [" + jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR + "]", jQXB.JQXB_DEFAULT_CHANGE_EVENT, function () { var a = jQuery(this); var c = a.parents("[" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "]").first().attr(jQXB.JQXB_TEMPLATEOWNER_ATTR); var b = a.parents("[" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "]").first().attr(jQXB.JQXB_TEMPLATEITEMIDX_ATTR); var d = jQXB.getValueFromAttrib(a); jQXB.setmemberVarvalue(a.parents("[" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "=" + c + "]").attr(jQXB.JQXB_DATASOURCE_ATTR), b, a.attr(jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR), d, a) }); return jQXB }; jQXB.attachChangeEvent = function (a, e, c, d) { var b = d.attr(jQXB.JQXB_CHANGEONEVENT_ATTR); if (b == undefined) { b = jQXB.JQXB_DEFAULT_CHANGE_EVENT } d.unbind(b, function () { jQXB.setmemberVarvalue(a, e, c, jQXB.getValueFromAttrib(jQuery(this)), jQuery(this)) }); d.bind(b, function () { jQXB.setmemberVarvalue(a, e, c, jQXB.getValueFromAttrib(jQuery(this)), jQuery(this)) }); return jQXB }; jQXB.addOnTemplateItemBoundhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnTemplateItemBoundhnd Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onTemplateItemBindedCallbacks, a); return jQXB }; jQXB.delOnTemplateItemBoundhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnTemplateItemBoundhnd Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onTemplateItemBindedCallbacks, a); return jQXB }; jQXB.addOnBeforeUpdatehnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnBeforeUpdatehnd   Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onBeforeUpdateCallBacks, a); return jQXB }; jQXB.delOnBeforeUpdatehnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnBeforeUpdatehnd Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onBeforeUpdateCallBacks, a); return jQXB }; jQXB.addOnAfterUpdatehnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnAfterUpdatehnd   Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onAfterUpdateCallBacks, a); return jQXB }; jQXB.delOnAfterUpdatehnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnAfterUpdatehnd Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onAfterUpdateCallBacks, a); return jQXB }; jQXB.addOnBeforeDataSourceBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnBeforeDataSourceBindhnd Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onBeforeDataSourceBindCallBacks, a); return jQXB }; jQXB.delOnBeforeDataSourceBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnBeforeDataSourceBindhnd  Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onBeforeDataSourceBindCallBacks, a); return jQXB }; jQXB.addOnAfterDataSourceBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnAfterDataSourceBindhnd Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onAfterDataSourceBindCallBacks, a); return jQXB }; jQXB.delOnAfterDataSourceBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnAfterDataSourceBindhnd  Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onAfterDataSourceBindCallBacks, a); return jQXB }; jQXB.addOnBeforeTemplateBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnAfterTemplateBindhnd  Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onBeforeTemplateBindCallBacks, a); return jQXB }; jQXB.delOnBeforeTemplateBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnBeforeTemplateBindhnd  Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onBeforeTemplateBindCallBacks, a); return jQXB }; jQXB.addOnAfterTemplateBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.addOnAfterTemplateBindhnd  Error: handler must be a function") } jQXB.addOnEvthnd(jQXB.onAfterTemplateBindCallBacks, a); return jQXB }; jQXB.delOnAfterTemplateBindhnd = function (a) { if (typeof (a) != "function") { alert("jQXB.delOnAfterTemplateBindhnd  Error: handler must be a function") } jQXB.delOnEventhdn(jQXB.onAfterTemplateBindCallBacks, a); return jQXB }; jQXB.addOnEvthnd = function (b, a) { for (idx = 0; idx < b.length; idx++) { if (b[idx].toString() == a.toString()) { return } } b.push(a) }; jQXB.delOnEventhdn = function (b, a) { if (typeof (a) != "function") { alert("jQXB.delOnEventhdn Error: handler param must be a function"); return } for (idx = 0; idx < b.length; idx++) { if (b[idx].toString() == a.toString()) { b.splice(idx, 1); break } } }; jQXB.setDataSource = function (c, d, a) { var b = jQXB.datasourcesCollection[c]; if (b == undefined) { b = { datasource: d, autorefresh: a} } else { b.datasource = d } if (a != undefined) { b.autorefresh = a } jQXB.datasourcesCollection[c] = b; jQXB.datasourcesCollectionOrigValues[c] = d; return jQXB }; jQXB.getDataSource = function getDataSource(a) { try { return jQXB.datasourcesCollection[a].datasource } catch (b) { b.arguments = arguments; alert(jQXB.diags.dumpobj(b, "[ERROR]", "->")) } }; jQXB.getDataSourceContainer = function (a) { return jQXB.datasourcesCollection[a] }; jQXB.getDataSourceOrigValue = function (a) { return jQXB.datasourcesCollectionOrigValues[a] }; jQXB.addRowToDataSource = function (b, c, a) { if (!jQXB.utils.isEnumerable(jQXB.getDataSource(b))) { alert(b + "  must be enumerable in order to add object "); return } if (a == undefined) { jQXB.getDataSource(b).push(c) } else { jQXB.getDataSource(b).splice(a, 0, c) } jQXB.bindTemplate(b); jQXB.bindList(b); return jQXB }; jQXB.addObjectToDataSource = function (a, b) { return jQXB.addRowToDataSource(a, b) }; jQXB.deleteRowFromDataSource = function (a, b) { if (!jQXB.utils.isEnumerable(jQXB.getDataSource(a))) { alert(a + "  must be enumerable in order to remove object "); return } jQXB.getDataSource(a).splice(b, 1); jQuery("[" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "][" + jQXB.JQXB_DATASOURCE_ATTR + "=" + a + "] > [" + jQXB.JQXB_TEMPLATE_ATTR + "][" + jQXB.JQXB_TEMPLATEITEMPREFIX_ATTR + "]").each(function () { jQXB.deleteTemplateRow(jQuery(this).attr(jQXB.JQXB_TEMPLATE_ATTR), b) }); return jQXB }; jQXB.deleteObjectFromDataSource = function (a, b) { return jQXB.deleteRowFromDataSource(a, b) }; jQXB.saveJSON = function (d, a, c, b) { return jQXB.postJSON(d, "post", a, c, b) }; jQXB.deleteJSON = function (d, a, c, b) { return jQXB.postJSON(d, "delete", a, c, b) }; jQXB.postJSON = function (e, c, a, d, b) { return jQXB.ajaxCall(e, c, a, d, b) }; jQXB.ajaxCall = function (e, c, a, d, b) { jQuery.ajax({ type: c, traditional: true, url: e, async: false, data: jQXB.toJSON(a), dataType: "json", contentType: "application/json; " + jQXB.charset, success: function (f) { if (d != undefined) { d(f) } }, error: function (f) { if (b != undefined) { if (jQXB.alertOnError) { alert("jQXB.ajaxCall ERROR: url:" + e + " method: " + c) } b(f) } } }); return jQXB }; jQXB.getJSON = function (d, a, c, b) { jQuery.ajax({ type: "get", traditional: true, url: d, async: false, data: a, dataType: "json", contentType: "application/json; " + jQXB.charset, success: function (e) { if (c != undefined) { c(e) } }, error: function (e) { if (b != undefined) { if (jQXB.alertOnError) { alert("jQXB.getJSON ERROR:") } b(e) } } }); return jQXB }; jQXB.deleteTemplateRow = function (f, d) { var a, e, b, c; a = jQuery("[" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "=" + f + "]").first().attr(jQXB.JQXB_DATASOURCE_ATTR); jQuery("[" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "=" + f + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "=" + d + "]").remove(); e = jQuery("[" + jQXB.JQXB_TEMPLATE_ATTR + "=" + f + "][" + jQXB.JQXB_TEMPLATEITEMPREFIX_ATTR + "]").first().attr(jQXB.JQXB_TEMPLATEITEMPREFIX_ATTR); b = 0; jQuery("[" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "=" + f + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "]").each(function () { jQuery(this).attr("id", e + "_" + b).attr(jQXB.JQXB_TEMPLATEITEMIDX_ATTR, b); jQXB.bindElementsTemplates(a, jQuery(this).attr(jQXB.JQXB_TEMPLATEOWNER_ATTR), b, jQuery(this)); b++ }); return jQXB }; jQXB.clearTemplateInstances = function (a) { jQuery("[" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "=" + a + "]").unbind().remove(); return jQXB }; jQXB.doBind = function (b, a) { var c = new Array(); if (b != undefined) { c.push(b) } else { for (var g in jQXB.datasourcesCollection) { c.push(g) } } try { for (var f = 0; f < c.length; f++) { jQXB.bindList(c[f], a); jQXB.bindSingleDataMember(c[f], a); jQXB.bindTemplate(c[f], a) } } catch (d) { d.arguments = arguments; alert(jQXB.diags.dumpobj(d, "ERROR", "->")) } return jQXB }; jQXB.bindList = function (b, a) { jQuery("[" + jQXB.JQXB_LISTSOURCE + "=" + b + "][" + jQXB.JQXB_LISTVALUE + "][" + jQXB.JQXB_LISTTEXT + "]").each(function () { jQXB.utils.filllist(jQuery(this), jQXB.getDataSource(b), jQuery(this).attr(jQXB.JQXB_LISTVALUE), jQuery(this).attr(jQXB.JQXB_LISTTEXT)) }) }; jQXB.bindSingleDataMember = function (b, a) { for (var c = 0; c < jQXB.onBeforeDataSourceBindCallBacks.length; c++) { jQXB.onBeforeDataSourceBindCallBacks[c](b, jQXB.getDataSource(b)) } jQuery("[" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "][" + jQXB.JQXB_DATASOURCE_MEMBER_ATTR + "]", a).each(function () { jQXB.bindElement(b, null, jQuery(this).attr(jQXB.JQXB_DATASOURCE_MEMBER_ATTR), jQuery(this)) }); for (var c = 0; c < jQXB.onAfterDataSourceBindCallBacks.length; c++) { jQXB.onAfterDataSourceBindCallBacks[c](b, jQXB.getDataSource(b)) } return jQXB }; jQXB.bindElement = function (b, e, a, d) { var c = jQXB.getDataSource(b); jQXB.getmemberValue(c, e, a, d); return jQXB }; jQXB.bindTemplate = function (b, a) { jQuery("[" + jQXB.JQXB_TEMPLATECONTAINER_ATTR + "][" + jQXB.JQXB_DATASOURCE_ATTR + "=" + b + "]").each(function () { var f, e, c; f = jQXB.getDataSource(b); e = jQuery(this); c = e.attr(jQXB.JQXB_TEMPLATECONTAINER_ATTR); for (var d = 0; d < jQXB.onBeforeTemplateBindCallBacks.length; d++) { jQXB.onBeforeTemplateBindCallBacks[d](b, jQXB.getDataSource(b), c) } for (var d = 0; d < f.length; d++) { jQrySingleItem = jQuery(this).find("[" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "=" + d + "]"); if (jQrySingleItem.length != 0) { jQuery(this).find("[" + jQXB.JQXB_TEMPLATEOWNER_ATTR + "][" + jQXB.JQXB_TEMPLATEITEMIDX_ATTR + "=" + d + "]").each(function () { jQXB.bindElementsTemplates(b, c, d, jQuery(this)) }) } else { jQrySingleItem = e.find("[" + jQXB.JQXB_TEMPLATE_ATTR + "=" + c + "]").clone(); id = jQrySingleItem.attr(jQXB.JQXB_TEMPLATEITEMPREFIX_ATTR); id += "_" + d; jQrySingleItem.attr("id", id).removeAttr(jQXB.JQXB_TEMPLATEITEMPREFIX_ATTR).removeAttr(jQXB.JQXB_TEMPLATE_ATTR).attr(jQXB.JQXB_TEMPLATEITEMIDX_ATTR, d).attr(jQXB.JQXB_TEMPLATEOWNER_ATTR, c).show().appendTo(e); jQXB.bindElementsTemplates(b, c, d, jQrySingleItem) } } }); return jQXB }; jQXB.bindElementsTemplates = function (a, e, d, c) { c.find("[" + jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR + "]").each(function () { var g = jQuery(this).attr(jQXB.JQXB_TEMPLATEITEMDATAMEMBER_ATTR); try { var h = jQuery(this).attr(jQXB.JQXB_TEMPLATEITEM_DYNAMIC_ID_ATTR); if (jQuery(this).attr("id") == undefined && h != undefined) { jQuery(this).removeAttr("id"); jQuery(this).removeAttr(jQXB.JQXB_TEMPLATEITEM_DYNAMIC_ID_ATTR).attr("id", h + d) } } catch (f) { } jQXB.bindElement(a, d, g, jQuery(this)) }); for (var b = 0; b < jQXB.onTemplateItemBindedCallbacks.length; b++) { jQXB.onTemplateItemBindedCallbacks[b](a, e, d, jQXB.getDataSource(a)[d], c) } return jQXB }; jQXB.setmemberVarvalue = function (e, l, g, m, h) { var k, j, d; k = g.split("."); d = jQXB.getDataSource(e); if (d === undefined && jQXB.alertOnError) { alert("jQXB.setmemberVarvalue ERROR: no datasource '" + e + "' found. called from " + jQXB.setmemberVarvalue.caller.toString()) } j = jQXB.getMemberByReflection(d, l, k); if (typeof (j) == "function") { return } var a = jQXB.onBeforeUpdateCallBacks.length; for (var f = 0; f < a; f++) { var c = jQXB.onBeforeUpdateCallBacks[f](e, l, j, g, m); if (c == true) { jQXB.getmemberValue(d, l, g, h); return } } jQXB.setMemberValByReflection(d, l, k, m); if (jQXB.getDataSourceContainer(e).autorefresh) { jQXB.refreshControls(e, l, g) } var b = jQXB.onAfterUpdateCallBacks.length; for (var f = 0; f < b; f++) { var c = jQXB.onAfterUpdateCallBacks[f](e, l, jQXB.getMemberByReflection(d, l, k), g, m) } return jQXB }; jQXB.setMemberValByReflection = function (e, c, d, f) { var b; b = (c != null) ? e[c] : e; for (var a = 0; a < d.length - 1; a++) { b = b[d[a]] } b[d[d.length - 1]] = f }; jQXB.getMemberByReflection = function (e, c, d) { var b; b = (c != null) ? e[c] : e; for (var a = 0; a < d.length - 1; a++) { b = b[d[a]] } return b[d[d.length - 1]] }; jQXB.getmemberValue = function (b, f, c, d) { var e; e = jQXB.getMemberByReflection(b, f, c.split(".")); var a = d.attr(jQXB.JQXB_BINDEDATTRIBUTE_ATTR); if (typeof (e) == "function") { e = e(b[f] || b) } var g = d.attr(jQXB.JQXB_VALUETRANSFORMATION); if (g != undefined) { e = jQXB.utils.callFunctionByName(g, window, e) } if (a == undefined) { d.val(e) } else { switch (a) { case "html": d.html(e); break; case "text": d.text(e); break; default: if (jQXB.compatibilitymode) { d.attr(a, e) } else { d.prop(a, e) } break } } e = null; return jQXB }; jQXB.getValueFromAttrib = function (b) { var a = b.attr(jQXB.JQXB_BINDEDATTRIBUTE_ATTR); if (a != undefined) { if (jQXB.compatibilitymode) { elementValue = b.attr(a) } else { elementValue = b.prop(a) } } else { elementValue = b.val() } var c = b.attr(jQXB.JQXB_VALUETRANSFORMATION); if (c != undefined) { elementValue = jQXB.utils.callFunctionByName(c, window, elementValue) } return elementValue }; jQXB.utils = {}; jQXB.utils.filllist = function (d, b, f, e) { if (!jQXB.utils.isEnumerable(b)) { alert("jQXB.utils.filllist: dataItems is not an enumerable type"); return } var a = d.val(); d.find("option").remove(); for (var c = 0; c < b.length; c++) { d.append(jQuery("<option></option>").attr("value", jQXB.getMemberByReflection(b, c, f.split("."))).text(jQXB.getMemberByReflection(b, c, e.split(".")))) } d.val(a) }; jQXB.utils.isEnumerable = function (a) { return a.length != undefined }; jQXB.utils.normalizeMemberPath = function (a) { return a.replace("[").replace("]") }; jQXB.utils.makeObservable = function (c) { var b = {}; for (var a in c) { b.__defineGetter__(a.toString(), function () { return a }); b._defineSetter__(a.toString(), function (d) { a = d }) } }; jQXB.utils.callFunctionByName = function (c, b) { var a = Array.prototype.slice.call(arguments, 2); var f = c.split("."); var d = f.pop(); for (var e = 0; e < f.length; e++) { b = b[f[e]] } return b[d].apply(b, a) }; jQXB.diags = { MAX_DUMP_DEPTH: 10 }; jQXB.diags.dumpobj = function (h, g, c, f) { depth = f || 0; if (depth > jQXB.diags.MAX_DUMP_DEPTH) { return c + g + ": <Maximum Depth Reached>\n" } if (typeof h == "object") { var a = null; var j = c + g + "\n"; c += "\t"; for (var d in h) { try { a = h[d] } catch (b) { a = "<Unable to Evaluate>" } if (typeof a == "object") { j += jQXB.diags.dumpobj(a, d, c, depth + 1) } else { j += c + d + ": " + a + "\n" } } return j } else { return h } }; jQXB.diags.output = function (a) { alert(a) }; jQXBM = { messageSubscribers: new Array(), checkNoSubscriber: false }; jQXBM.subscribeMessage = function (b, a) { b = b || "any"; if (typeof (a) != "function") { alert("jQXBM.subscribeMessage: messagehandler for topic [" + b + "] is not a function"); return } jQXBM.messageSubscribers[b] = jQXBM.messageSubscribers[b] || new Array(); for (idx = 0; idx < jQXBM.messageSubscribers[b].length; idx++) { if (jQXBM.messageSubscribers[b][idx].toString() == a.toString()) { return } } jQXBM.messageSubscribers[b].push(a) }; jQXBM.unsubscribeMessage = function (b, a) { b = b || "any"; if (typeof (a) != "function") { alert("jQXBM.unsubscribeMessage: messagehandler for topic [" + b + "] is not a function"); return } for (idx = 0; idx < jQXBM.messageSubscribers[b].length; idx++) { if (jQXBM.messageSubscribers[b][idx].toString() == a.toString()) { jQXBM.messageSubscribers[b].splice(idx, 1); return } } }; jQXBM.fireMessage = function (d, a, b) { var c; c = jQXBM.messageSubscribers.any; if (c != undefined) { for (i = 0; i < c.length; i++) { c[i](a, b) } } if (d == undefined) { return } c = jQXBM.messageSubscribers[d]; if (c == undefined) { return } for (i = 0; i < c.length; i++) { c[i](a, b) } };
/* JSON.js */
var JSON; if (!JSON) { JSON = {} } (function () { function f(n) { return n < 10 ? "0" + n : n } if (typeof Date.prototype.toJSON !== "function") { Date.prototype.toJSON = function (key) { return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null }; String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function (key) { return this.valueOf() } } var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, rep; function quote(string) { escapable.lastIndex = 0; return escapable.test(string) ? '"' + string.replace(escapable, function (a) { var c = meta[a]; return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + string + '"' } function str(key, holder) { var i, k, v, length, mind = gap, partial, value = holder[key]; if (value && typeof value === "object" && typeof value.toJSON === "function") { value = value.toJSON(key) } if (typeof rep === "function") { value = rep.call(holder, key, value) } switch (typeof value) { case "string": return quote(value); case "number": return isFinite(value) ? String(value) : "null"; case "boolean": case "null": return String(value); case "object": if (!value) { return "null" } gap += indent; partial = []; if (Object.prototype.toString.apply(value) === "[object Array]") { length = value.length; for (i = 0; i < length; i += 1) { partial[i] = str(i, value) || "null" } v = partial.length === 0 ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]"; gap = mind; return v } if (rep && typeof rep === "object") { length = rep.length; for (i = 0; i < length; i += 1) { if (typeof rep[i] === "string") { k = rep[i]; v = str(k, value); if (v) { partial.push(quote(k) + (gap ? ": " : ":") + v) } } } } else { for (k in value) { if (Object.prototype.hasOwnProperty.call(value, k)) { v = str(k, value); if (v) { partial.push(quote(k) + (gap ? ": " : ":") + v) } } } } v = partial.length === 0 ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}"; gap = mind; return v } } if (typeof JSON.stringify !== "function") { JSON.stringify = function (value, replacer, space) { var i; gap = ""; indent = ""; if (typeof space === "number") { for (i = 0; i < space; i += 1) { indent += " " } } else { if (typeof space === "string") { indent = space } } rep = replacer; if (replacer && typeof replacer !== "function" && (typeof replacer !== "object" || typeof replacer.length !== "number")) { throw new Error("JSON.stringify") } return str("", { "": value }) } } if (typeof JSON.parse !== "function") { JSON.parse = function (text, reviver) { var j; function walk(holder, key) { var k, v, value = holder[key]; if (value && typeof value === "object") { for (k in value) { if (Object.prototype.hasOwnProperty.call(value, k)) { v = walk(value, k); if (v !== undefined) { value[k] = v } else { delete value[k] } } } } return reviver.call(holder, key, value) } text = String(text); cx.lastIndex = 0; if (cx.test(text)) { text = text.replace(cx, function (a) { return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) } if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) { j = eval("(" + text + ")"); return typeof reviver === "function" ? walk({ "": j }, "") : j } throw new SyntaxError("JSON.parse") } } } ());
/* X2JS */
function X2JS() { var r = "1.0.11"; var d = false; var a = { ELEMENT_NODE: 1, TEXT_NODE: 3, CDATA_SECTION_NODE: 4, DOCUMENT_NODE: 9 }; function f(s) { var t = s.localName; if (t == null) { t = s.baseName } if (t == null || t == "") { t = s.nodeName } return t } function g(s) { return s.prefix } function e(s) { if (typeof (s) == "string") { return s.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;").replace(/\//g, "&#x2F;") } else { return s } } function q(s) { return s.replace(/&amp;/g, "&").replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"').replace(/&#x27;/g, "'").replace(/&#x2F;/g, "/") } function j(y) { if (y.nodeType == a.DOCUMENT_NODE) { var B = new Object; var v = y.firstChild; var w = f(v); B[w] = j(v); return B } else { if (y.nodeType == a.ELEMENT_NODE) { var B = new Object; B.__cnt = 0; var z = y.childNodes; for (var x = 0; x < z.length; x++) { var v = z.item(x); var w = f(v); B.__cnt++; if (B[w] == null) { B[w] = j(v); B[w + "_asArray"] = new Array(1); B[w + "_asArray"][0] = B[w] } else { if (B[w] != null) { if (!(B[w] instanceof Array)) { var C = B[w]; B[w] = new Array(); B[w][0] = C; B[w + "_asArray"] = B[w] } } var t = 0; while (B[w][t] != null) { t++ } (B[w])[t] = j(v) } } for (var s = 0; s < y.attributes.length; s++) { var u = y.attributes.item(s); B.__cnt++; B["_" + u.name] = u.value } var A = g(y); if (A != null && A != "") { B.__cnt++; B.__prefix = A } if (B.__cnt == 1 && B["#text"] != null) { B = B["#text"] } if (B["#text"] != null) { B.__text = B["#text"]; if (d) { B.__text = q(B.__text) } delete B["#text"]; delete B["#text_asArray"] } if (B["#cdata-section"] != null) { B.__cdata = B["#cdata-section"]; delete B["#cdata-section"]; delete B["#cdata-section_asArray"] } if (B.__text != null || B.__cdata != null) { B.toString = function () { return (this.__text != null ? this.__text : "") + (this.__cdata != null ? this.__cdata : "") } } return B } else { if (y.nodeType == a.TEXT_NODE || y.nodeType == a.CDATA_SECTION_NODE) { return y.nodeValue } } } } function p(y, x, t, w) { var z = "<" + ((y != null && y.__prefix != null) ? (y.__prefix + ":") : "") + x; if (t != null) { for (var s = 0; s < t.length; s++) { var u = t[s]; var v = y[u]; z += " " + u.substr(1) + "='" + v + "'" } } if (!w) { z += ">" } else { z += "/>" } return z } function c(t, s) { return "</" + (t.__prefix != null ? (t.__prefix + ":") : "") + s + ">" } function b(s, t) { return s.indexOf(t, s.length - t.length) !== -1 } function i(s, t) { if (b(t.toString(), ("_asArray")) || t.toString().indexOf("_") == 0 || (s[t] instanceof Function)) { return true } else { return false } } function h(u) { var s = 0; if (u instanceof Object) { for (var t in u) { if (i(u, t)) { continue } s++ } } return s } function l(u) { var t = []; if (u instanceof Object) { for (var s in u) { if (s.toString().indexOf("__") == -1 && s.toString().indexOf("_") == 0) { t.push(s) } } } return t } function n(s) { var t = ""; if (s.__cdata != null) { t += "<![CDATA[" + s.__cdata + "]]>" } if (s.__text != null) { if (d) { t += e(s.__text) } else { t += s.__text } } return t } function o(s) { var t = ""; if (s instanceof Object) { t += n(s) } else { if (s != null) { if (d) { t += e(s) } else { t += s } } } return t } function k(v, u, t) { var w = ""; if (v.length == 0) { w += p(v, u, t, true) } else { for (var s = 0; s < v.length; s++) { w += p(v[s], u, l(v[s]), false); w += m(v[s]); w += c(v[s], u) } } return w } function m(v) { var w = ""; var t = h(v); if (t > 0) { for (var u in v) { if (i(v, u)) { continue } var x = v[u]; var s = l(x); if (x == null || x == undefined) { w += p(x, u, s, true) } else { if (x instanceof Object) { if (x instanceof Array) { w += k(x, u, s) } else { var y = h(x); if (y > 0 || x.__text != null || x.__cdata != null) { w += p(x, u, s, false); w += m(x); w += c(x, u) } else { w += p(x, u, s, true) } } } else { w += p(x, u, s, false); w += o(x); w += c(x, u) } } } } w += o(v); return w } this.parseXmlString = function (u) { var t; if (window.DOMParser) { var s = new window.DOMParser(); t = s.parseFromString(u, "text/xml") } else { if (u.indexOf("<?") == 0) { u = u.substr(u.indexOf("?>") + 2) } t = new ActiveXObject("Microsoft.XMLDOM"); t.async = "false"; t.loadXML(u) } return t }; this.xml2json = function (s) { return j(s) }; this.xml_str2json = function (t) { var s = this.parseXmlString(t); return this.xml2json(s) }; this.json2xml_str = function (s) { return m(s) }; this.json2xml = function (s) { var t = this.json2xml_str(s); return this.parseXmlString(t) }; this.getVersion = function () { return r }; this.escapeMode = function (s) { d = s } } var x2js = new X2JS();
/* Alerts.js */
(function (a) { a.alerts = { verticalOffset: -75, horizontalOffset: 0, repositionOnResize: true, overlayOpacity: 0.7, overlayColor: "#000000", Color: "#FF9", bckgrdPopupColor: "#ffffff", draggable: false, okButton: "&nbsp;OK&nbsp;", cancelButton: "&nbsp;Cancel&nbsp;", dialogClass: null, Info: function (b) { a.alerts._show1("Information", b, null, "info", function (c) { }) }, Mandatory: function (b) { a.alerts._show1("Mandatory Fields", b, null, "info", function (c) { }) }, Warning: function (b) { a.alerts._show1("Warning", b, null, "warning", function (c) { }) }, Success: function (b) { a.alerts._show1("Success", b, null, "success", function (c) { }) }, Error: function (b) { a.alerts._show1("Error", b, null, "error", function (c) { }) }, Confirm: function (b) { a.alerts._show1("Confirmation", b, null, "confirm", function (c) { }) }, Prompt: function (b, c) { a.alerts._show1("Prompt", b, c, "prompt", function (d) { }) }, Message: function (b) { a.alerts._show1("Message", b, null, "message", function (c) { }) }, SubmitSuccess: function (b) { a.alerts._show1("Success", b, null, "success", function (c) { window.close() }) }, _show1: function (g, d, i, h, b) { a.alerts._hide(); a.alerts._overlay("show"); if (g == "Message") { a("BODY").append('<div id="popup_container"><h1 id="popup_title" align="center"></h1><div id="popup_content"><div id="popup_message" style="padding:5px 5px 7px;border:0px;height:300px;border-color:blue;margin-left:0px;margin-right:10px;font-size:14;overflow:auto;"></div></div></div>') } else { a("BODY").append('<div id="popup_container"><h1 id="popup_title" align="center"></h1><div id="popup_content"><div id="popup_message" style="padding:5px 5px 7px;border:0px;height:150px;border-color:blue;margin-left:0px;margin-right:10px;font-size:14;overflow:auto;"></div></div></div>') } if (a.alerts.dialogClass) { a("#popup_container").addClass(a.alerts.dialogClass) } var f = (a.browser.msie && parseInt(a.browser.version) <= 6) ? "absolute" : "fixed"; if (g == "Message") { a("#popup_container").css({ width: 700, height: "auto", position: f, zIndex: 99999, padding: 0, margin: 50, left: 400, background: a.alerts.bckgrdPopupColor }) } else { a("#popup_container").css({ width: 450, height: 300, position: f, zIndex: 99999, padding: 0, margin: 50, left: 400, background: a.alerts.bckgrdPopupColor }) } a("#popup_title").text(g); a("#popup_content").addClass(h); a("#popup_message").text(d); a("#popup_message").html(a("#popup_message").text().replace(/\n/g, "<br />")); a("#popup_container").css({ minWidth: a("#popup_container").outerWidth(), maxWidth: a("#popup_container").outerWidth() }); a.alerts._reposition(); a.alerts._maintainPosition(true); switch (h) { case "info": case "warning": case "success": case "error": case "message": a("#popup_message").after('<div id="popup_panel" valign:"vertical"><input type="button"  style="background-color: Gray; color: #FFFFFF; font-weight: bold; position:relative;" class="popup_Button" value="' + a.alerts.okButton + '" id="popup_ok" /></div>'); a("#popup_ok").click(function () { a.alerts._hide(); b(true) }); a("#popup_ok").focus().keypress(function (j) { if (j.keyCode == 13 || j.keyCode == 27) { a("#popup_ok").trigger("click") } }); break; case "confirm": a("#popup_message").after('<div id="popup_panel" valign:"vertical"><input type="button"  style="background-color: Gray; color: #FFFFFF; font-weight: bold;" class="popup_Button"  value="' + a.alerts.okButton + '" id="popup_ok" /> <input type="button"  style="background-color: Gray; color: #FFFFFF; font-weight: bold;" class="popup_Button"  value="' + a.alerts.cancelButton + '" id="popup_cancel" /></div>'); a("#popup_ok").click(function () { a.alerts._hide(); if (b) { b(true) } }); a("#popup_cancel").click(function () { a.alerts._hide(); if (b) { b(false) } }); a("#popup_ok").focus(); a("#popup_ok, #popup_cancel").keypress(function (j) { if (j.keyCode == 13) { a("#popup_ok").trigger("click") } if (j.keyCode == 27) { a("#popup_cancel").trigger("click") } }); break; case "prompt": a("#popup_message").append('<br /><input type="text" size="30" id="popup_prompt" />').after('<div id="popup_panel" valign:"vertical"><input type="button"  style="background-color:Gray; color: #FFFFFF; font-weight: bold;" class="popup_Button"  value="' + a.alerts.okButton + '" id="popup_ok" /> <input type="button"  style="background-color: Gray; color: #FFFFFF; font-weight: bold;" class="popup_Button" value="' + a.alerts.cancelButton + '" id="popup_cancel" /></div>'); a("#popup_prompt").width(a("#popup_message").width()); a("#popup_ok").click(function () { var e = a("#popup_prompt").val(); a.alerts._hide(); if (b) { b(e) } }); a("#popup_cancel").click(function () { a.alerts._hide(); if (b) { b(null) } }); a("#popup_prompt, #popup_ok, #popup_cancel").keypress(function (j) { if (j.keyCode == 13) { a("#popup_ok").trigger("click") } if (j.keyCode == 27) { a("#popup_cancel").trigger("click") } }); if (i) { a("#popup_prompt").val(i) } a("#popup_prompt").focus().select(); break } if (a.alerts.draggable) { try { a("#popup_container").draggable({ handle: a("#popup_title") }); a("#popup_title").css({ cursor: "move", font: 15 }) } catch (c) { } } }, _hide: function () { a("#popup_container").remove(); a.alerts._overlay("hide"); a.alerts._maintainPosition(false) }, _overlay: function (b) { switch (b) { case "show": a.alerts._overlay("hide"); a("BODY").append('<div id="popup_overlay"></div>'); a("#popup_overlay").css({ position: "absolute", zIndex: 99998, top: "0px", left: "0px", width: "100%", height: a(window).height() - 100 + "px", background: a.alerts.overlayColor, opacity: a.alerts.overlayOpacity }); break; case "hide": a("#popup_overlay").remove(); break } }, _reposition: function () { var c = ((a(window).height() / 2) - (a("#popup_container").outerHeight() / 2)) + a.alerts.verticalOffset; var b = ((a(window).width() / 2) - (a("#popup_container").outerWidth() / 2)) + a.alerts.horizontalOffset; if (c < 0) { c = 0 } if (b < 0) { b = 0 } if (a.browser.msie && parseInt(a.browser.version) <= 6) { c = c + a(window).scrollTop() } a("#popup_container").css({ top: c + "px", left: b + "px" }); a("#popup_overlay").height(a(document).height()) }, _maintainPosition: function (b) { if (a.alerts.repositionOnResize) { switch (b) { case true: a(window).bind("resize", function () { a.alerts._reposition() }); break; case false: a(window).unbind("resize"); break } } } }, MsgboxInfo = function (b) { a.alerts.Info(b) }, MsgboxWarning = function (b) { a.alerts.Warning(b) }, MsgboxSuccess = function (b) { a.alerts.Success(b) }, MsgboxError = function (b) { a.alerts.Error(b) }, MsgboxConfirm = function (b) { a.alerts.Confirm(b) }, MsgboxPrompt = function (b, c) { a.alerts.Prompt(b, c) }, MsgboxAlert = function (i, h, f, d, b) { var g = 2; try { if (f != 0) { a.ajax({ type: "POST", url: "../../FormsService.aspx/GetMessage", data: "{'sessionId':" + i.toString() + ",'messageType':'" + g + "','messageId':" + f.toString() + ",'messageCode':'" + d + "', 'customMessageOnDBFail':'" + b + "'}", contentType: "application/json; charset=utf-8", dataType: "json", async: false, cache: false, success: function (k) { var l = k.d.DisplayMessage.toString(); var m = k.d.DisplayType.toString(); var e = l.toString(); var j = m.toString(); if (f == 39) { j = "9" } switch (j) { case "1": a.alerts.Success(e); break; case "2": a.alerts.Error(e); break; case "3": a.alerts.Warning(e); break; case "4": a.alerts.Info(e); break; case "5": a.alerts.Prompt(e); break; case "6": a.alerts.Confirm(e); break; case "7": a.alerts.Mandatory(e); break; case "8": a.alerts.Message(e); break; case "9": a.alerts.SubmitSuccess(e); break; default: a.alerts.Info(e) } }, error: function (k, e, j) { a.alerts.Error(k.status + " - " + k.responseText) } }) } else { if (f == 0) { switch (h) { case 1: a.alerts.Success(b); break; case 2: a.alerts.Error(b); break; case 3: a.alerts.Warning(b); break; case 4: a.alerts.Info(b); break; case 5: a.alerts.Prompt(b); break; case 6: a.alerts.Confirm(b); break; case 7: a.alerts.Mandatory(b); break; default: a.alerts.Info(b) } } } } catch (c) { alert(c) } }, MsgboxAlertDashboard = function (i, h, f, d, b) { var g = 2; try { if (f != 0) { a.ajax({ type: "POST", url: "../../FormsService.aspx/GetMessage", data: "{'sessionId':" + i.toString() + ",'messageType':'" + g + "','messageId':" + f.toString() + ",'messageCode':'" + d + "', 'customMessageOnDBFail':'" + b + "'}", contentType: "application/json; charset=utf-8", dataType: "json", async: false, cache: false, success: function (k) { var l = k.d.DisplayMessage.toString(); var m = k.d.DisplayType.toString(); var e = l.toString(); var j = m.toString(); switch (j) { case "1": a.alerts.Success(e); break; case "2": a.alerts.Error(e); break; case "3": a.alerts.Warning(e); break; case "4": a.alerts.Info(e); break; case "5": a.alerts.Prompt(e); break; case "6": a.alerts.Confirm(e); break; case "7": a.alerts.Mandatory(e); break; default: a.alerts.Info(e) } }, error: function (k, e, j) { a.alerts.Error(k.status + " - " + k.responseText) } }) } else { if (f == 0) { switch (h) { case 1: a.alerts.Success(b); break; case 2: a.alerts.Error(b); break; case 3: a.alerts.Warning(b); break; case 4: a.alerts.Info(b); break; case 5: a.alerts.Prompt(b); break; case 6: a.alerts.Confirm(b); break; case 7: a.alerts.Mandatory(b); break; default: a.alerts.Info(b) } } } } catch (c) { alert(c) } } })(jQuery);
/* OB Page methods and redirects */
var OBPage = {
    redirectPage: "Accessblock.aspx",
    winLoc: window.location,
    /* Session Invalid */RedirectOnSessionInvalid: function () { OBPage.winLoc.href = "../../" + OBPage.redirectPage + "?BlockId=10"; return; },
    /* Session expired */RedirectOnSessionExpire: function () { OBPage.winLoc.href = "../../" + OBPage.redirectPage + "?SSId=" + sessionId.toString() + "&BlockId=7"; return; },
    /* Unauthorized access */RedirectOnUnAuthorizedAccess: function () { OBPage.winLoc.href = "../../" + OBPage.redirectPage + "?SSId=" + sessionId.toString() + "&BlockId=6"; return; },
    /* Redirect on error */RedirectOnError: function (message) { OBPage.winLoc.href = "../../" + OBPage.redirectPage + "?SSId=" + sessionId.toString() + "&Message=" + message.toString(); return; }
};
/* OB Utility methods */
var OBUtils = {
    /* Function which gets xml in string format from DOM object */
    getXmlStringFromDOM: function (xmlDOM) { var xmlString = ''; var objXMLSerializer; if ($.browser.msie) { try { xmlString = xmlDOM.xml; } catch (e) { alert('Error: DOM not available'); } } else { try { xmlString = (new XMLSerializer()).serializeToString(xmlDOM); } catch (e) { alert('Error : xmlSerialiser not available'); } } return xmlString; },
    /* Function to convert XML Timestamp data type to Javascript date */
    getTSToUTCDate: function (xmlDate) { var dt = new Date(); var dtS = xmlDate.slice(xmlDate.indexOf('T') + 1, xmlDate.indexOf('.')); var TimeArray = dtS.split(":"); dt.setUTCHours(TimeArray[0], TimeArray[1], TimeArray[2]); dtS = xmlDate.slice(0, xmlDate.indexOf('T')); TimeArray = dtS.split("-"); dt.setUTCFullYear(TimeArray[0], (TimeArray[1] - 1), TimeArray[2]); return dt; },
    /* Function to attach script dynamically */
    AttachScript: function (src) { var script = document.createElement("SCRIPT"); script.type = "text/javascript"; document.getElementsByTagName("body")[0].appendChild(script); script.src = src; },
    /* Function to convert string to XML - Cross browser compatibility checked */
    OBParseXML: function (data) { var xml; try { if ($.browser.msie) { xml = new ActiveXObject("Microsoft.XMLDOM"); xml.async = "false"; xml.loadXML(data); } else { xml = $.parseXML(data); } } catch (e) { xml = undefined; } if (!xml || !xml.documentElement || xml.getElementsByTagName("parsererror").length) { jQuery.error("Invalid XML: " + data); } return xml; },
    /* Function which holds list of parameters passed in query string in array object*/
    OBQueryString: (function (a) { if (a == "") return {}; var b = {}; for (var i = 0; i < a.length; ++i) { var p = a[i].split('='); if (p.length != 2) continue; b[p[0]] = decodeURIComponent(p[1].replace(/\+/g, " ")); } return b; })(window.location.search.substr(1).split('&')),
    /* Function to check for active session */
    ActiveSession: function (sessionId, url) { var isActive = false; if (sessionId > 0) { if (url == undefined || url == "") { url = "../../FormsService.aspx/IsServiceActive"; } try { $.ajax({ type: 'post', url: url, data: "{'sessionId':" + sessionId + "}", dataType: "json", async: false, contentType: 'application/json; charset=utf-8', success: function (msg) { isActive = msg.d; }, error: function (xhr, status, textRemarks) { isActive = false; /*LogError(sessionId, xhr.status.toString(), textRemarks.toString());*/ } }); } catch (e) { isActive = false; } } else { isActive = false; } return isActive; },
    /* Function Error logger */
    LogError: function (sessionId, url, errorId, errorMessage, errParams) { if (sessionId == 'undefined') sessionId = 0; if (url == undefined || url == "") { url = "../../FormsService.aspx/LogError"; } if (errorMessage != "") { var data = "{'sessionId':" + sessionId.toString() + ",'errId':" + errorId.toString() + ",'errMsg':'" + errorMessage.toString() + "'}"; try { $.ajax({ type: 'post', url: url, data: data, dataType: "json", async: true, contentType: 'application/json; charset=utf-8', success: function (msg) { }, error: function (xhr, status, textRemarks) { alert(status + ' : ' + textRemarks); } }); } catch (e) { } } }
};
if (window.location.search.substr(1) != "") {
    var candidateId = 0, countryId = 0, sessionId = 0, dashboardMode = 0, roleGroupId = null, roleId = null;
    //Initializing globally processing variables
    candidateId = parseInt(OBUtils.OBQueryString["cand"]);
    countryId = parseInt(OBUtils.OBQueryString["cntry"]);
    sessionId = parseInt(OBUtils.OBQueryString["ss"]);
    dashboardMode = parseInt(OBUtils.OBQueryString["opmde"]);
    roleGroupId = parseInt(OBUtils.OBQueryString["rgid"]);
    roleId = parseInt(OBUtils.OBQueryString["roleid"]);
    var qsAppend = 'ss=' + sessionId.toString() + '&cand=' + candidateId.toString() + '&cntry=' + countryId.toString() + '&opmde=' + dashboardMode.toString() + '&rgid=' + roleGroupId + '&roleid=' + roleId;
} 